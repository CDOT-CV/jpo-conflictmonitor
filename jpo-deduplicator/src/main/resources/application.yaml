#General Properties
#==================
groupId: ^project.groupId^
artifactId: ^project.artifactId^
version: ^project.version^
server.port: 8085

# Kafka properties
spring.kafka.bootstrap-servers: localhost:9092
logging.level.org.apache.kafka: INFO
logging.level: INFO
log4j.logger.kafka: OFF
log4j.logger.org.apache.kafka: OFF



# Processed Map Topic
kafkaTopicProcessedMap: topic.ProcessedMap
kafkaTopicDeduplicatedProcessedMap: topic.DeduplicatedProcessedMap

# Processed Map WKT Topic
kafkaTopicProcessedMapWKT: topic.ProcessedMapWKT
kafkaTopicDeduplicatedProcessedMapWKT: topic.DeduplicatedProcessedMapWKT

# Ode Map Json Topic
kafkaTopicOdeMapJson: topic.OdeMapJson
kafkaTopicDeduplicatedOdeMapJson: topic.DeduplicatedOdeMapJson

# Ode Tim Json Topics
kafkaTopicOdeTimJson: topic.OdeTimJson
kafkaTopicDeduplicatedOdeTimJson: topic.DeduplicatedOdeTimJson




# Custom kafka properties
kafka.topics:
  autoCreateTopics: true  # Override auto-create in test properties
  numPartitions: 1
  numReplicas: 1
  createTopics:
    - name: ${kafkaTopicProcessedMap}
      cleanupPolicy: delete
      retentionMs: 300000
    - name: ${kafkaTopicDeduplicatedProcessedMap}
      cleanupPolicy: delete
      retentionMs: 300000
    - name: ${kafkaTopicProcessedMapWKT}
      cleanupPolicy: delete
      retentionMs: 300000
    - name: ${kafkaTopicDeduplicatedProcessedMapWKT}
      cleanupPolicy: delete
      retentionMs: 300000
    - name: ${kafkaTopicOdeMapJson}
      cleanupPolicy: delete
      retentionMs: 300000
    - name: ${kafkaTopicDeduplicatedOdeMapJson}
      cleanupPolicy: delete
      retentionMs: 300000
    - name: ${kafkaTopicOdeTimJson}
      cleanupPolicy: delete
      retentionMs: 300000
    - name: ${kafkaTopicDeduplicatedOdeTimJson}
      cleanupPolicy: delete
      retentionMs: 300000
    
    