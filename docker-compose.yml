include:
  - docker-compose-ode.yml

services:
  conflictmonitor-build:
    profiles:
      - all
      - cm_full
      - cm_base
      - cm_build
    build:
      context: .
      dockerfile: Dockerfile
      args:
        MAVEN_GITHUB_TOKEN: ${MAVEN_GITHUB_TOKEN:?error}
        MAVEN_GITHUB_ORG: ${MAVEN_GITHUB_ORG:?error}
    image: jpo-conflictmonitor:latest
    privileged: false  # Set true to allow writing to /proc/sys/vm/drop_caches
    restart: ${RESTART_POLICY}
    ports:
      - "8082:8082"
      - "10090:10090" # JMX
    environment:
      DOCKER_HOST_IP: ${DOCKER_HOST_IP:?error}
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS:?error}
      CONNECT_URL: ${CONNECT_URL:?error}
      spring.kafka.bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:?error}
      ROCKSDB_TOTAL_OFF_HEAP_MEMORY: ${ROCKSDB_TOTAL_OFF_HEAP_MEMORY:?error}
      ROCKSDB_INDEX_FILTER_BLOCK_RATIO: ${ROCKSDB_INDEX_FILTER_BLOCK_RATIO:?error}
      ROCKSDB_TOTAL_MEMTABLE_MEMORY: ${ROCKSDB_TOTAL_MEMTABLE_MEMORY:?error}
      ROCKSDB_BLOCK_SIZE: ${ROCKSDB_BLOCK_SIZE:?error}
      ROCKSDB_N_MEMTABLES: ${ROCKSDB_N_MEMTABLES:?error}
      ROCKSDB_MEMTABLE_SIZE: ${ROCKSDB_MEMTABLE_SIZE:?error}
    healthcheck:
      test: ["CMD", "java", "-version"]
      interval: 10s
      timeout: 10s
      retries: 20
    logging:
      options:
        max-size: "10m"
        max-file: "5"
    deploy:
      resources:
        limits:
          memory: 1G
    depends_on:
      kafka:
        condition: service_healthy
        required: false

  conflictmonitor-release:
    profiles:
      - cm_release
    image: usdotjpoode/jpo-conflictmonitor:latest
    restart: ${RESTART_POLICY}
    ports:
      - "8082:8082"
    environment:
      DOCKER_HOST_IP: ${DOCKER_HOST_IP:?error}
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS:?error}
      CONNECT_URL: ${CONNECT_URL:?error}
      spring.kafka.bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:?error}
      ROCKSDB_TOTAL_OFF_HEAP_MEMORY: ${ROCKSDB_TOTAL_OFF_HEAP_MEMORY:?error}
      ROCKSDB_INDEX_FILTER_BLOCK_RATIO: ${ROCKSDB_INDEX_FILTER_BLOCK_RATIO:?error}
      ROCKSDB_TOTAL_MEMTABLE_MEMORY: ${ROCKSDB_TOTAL_MEMTABLE_MEMORY:?error}
      ROCKSDB_BLOCK_SIZE: ${ROCKSDB_BLOCK_SIZE:?error}
      ROCKSDB_N_MEMTABLES: ${ROCKSDB_N_MEMTABLES:?error}
      ROCKSDB_MEMTABLE_SIZE: ${ROCKSDB_MEMTABLE_SIZE:?error}
    healthcheck:
      test: ["CMD", "java", "-version"]
      interval: 10s
      timeout: 10s
      retries: 20
    logging:
      options:
        max-size: "10m"
        max-file: "5"
    deploy:
      resources:
        limits:
          memory: 3G
    depends_on:
      kafka:
        condition: service_healthy
        required: false

